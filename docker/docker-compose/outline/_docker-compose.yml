version: "3"
services:
  outline:
    image: outlinewiki/outline
    env_file: ./docker.env
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - storage

  redis:
    image: redis
    env_file: ./docker.env
    ports:
      - "6379:6379"
    volumes:
      - ${PWD}/conf/redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3

  postgres:
    image: postgres
    env_file: ./docker.env
    ports:
      - "5432:5432"
    volumes:
      - ${PWD}/data/database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready -U user"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: outline

  storage:
    image: minio/minio:RELEASE.2022-07-26T00-53-03Z
    env_file: ./docker.env
    ports:
      - "9000:9000"
    entrypoint: sh
    command: -c 'minio server'
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - ${PWD}/data/storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  https-portal:
    image: steveltn/https-portal
    env_file: ./docker.env
    ports:
      - "80:80"
      - "443:443"
    links:
      - outline
      - storage
    restart: always
    volumes:
      - ${PWD}/data/https-portal:/var/lib/https-portal
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      DOMAINS: "docs.treeyh.com -> http://outline:3000"
      STAGE: production
      WEBSOCKET: true
